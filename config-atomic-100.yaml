# ----------------------------------------------------------------------------
# ContikiPy
# ----------------------------------------------------------------------------
contiki:
wd:
logtype: cooja
out:     /home/mike/Results/ATOMIC_100
csc:
target:

# ----------------------------------------------------------------------------
# Results Options
# packet regex ... https://regex101.com/r/26KZoD/15/
# ----------------------------------------------------------------------------
logtypes:
  cooja: '^\s*(?P<time>\d+):\s+(?P<id>\d+):'

formatters:
  patterns:
    # atomic
    - type:  atomic-energy
      regex: \s+(?P<level>[\w,-]+):\s+(?P<module>\w+)\s*ep:(?P<epoch>\d+)\s+(?P<type>\w+)(?:\s*h:(?P<hops>\d+)|\s+np:(?P<n_phases>\d+)|\s+gon:(?P<gon>\d+)|\s+ron:(?P<ron>\d+)|\s+con:(?P<con>\d+)\s+\(r (?P<all_rdc>\d+\W{1,2}\d+)| \/ (?P<rdc>\d+\W{1,2}\d+))+.*?$
    - type:  atomic-op
      regex: \s+(?P<level>[\w,-]+):\s+(?P<module>\w+)\s*ep:(?P<epoch>\d+)\s+(?P<type>\w+)(?:\s*h:(?P<hops>\d+)|\scp:\s*(?P<c_phase>\d+)|\s+tp:\s*(?P<n_phases>\d+)|\s+dur:\s*(?P<lat>\d+)|\s+tdur:\s*(?P<op_duration>\d+)|\s+an:(?P<active>\d+))+.*?$
  process:
    # atomic
    atomic-op:
      - filter:
          col:      active
          min:      1
          max:      1

# ----------------------------------------------------------------------------
# Simulations
# ----------------------------------------------------------------------------
simulations:
  # 100 Node Atomic
  - desc:           Atomic-SDN
    type:           atomic
    contiki:        /home/mike/Repos/atomic
    wd:             /home/mike/Repos/atomic/examples/atomic
    csc:            atomic-100-node.csc
    log:            Atomic-100
    makeargs:
      ATM_CONF_MAX_NODES:         100
      ATM_CONF_COLLECT_ALL_NODES: 1
      ATM_CONF_REACT_ALL_NODES:   1
      ATM_CONF_OP_FREQ:           60
      # ATM_CONF_COLLECT_FREQ:      3
      # ATM_CONF_REACT_FREQ:        5
      # ATM_CONF_CONFIGURE_FREQ:    7
    regex:
      - 'atomic-energy'
      - 'atomic-op'
    plot:
      atomic_op_times:
      latency_v_hops:
        df:      atomic-op
        packets: ['RACT']
        file:    'latency_v_hops'
      pdr_v_hops:
        df:      atomic-op
        packets: ['RACT']
        file:    'pdr_v_hops'
      energy_v_hops:
        df:      atomic-energy
        packets: ['RACT']
        file:    'energy_v_hops'

# ----------------------------------------------------------------------------
# compare (comparison) config
# ----------------------------------------------------------------------------
compare:
  - sims:
    # which sims do we want to compare?
    - Atomic_100
    # which plots do we want to compare?
    plots:
      - pdr_v_hops
      - energy_v_hops
    # plot arguments
    args:
      samefigure: 1
      # N.B. If you are going to put these on the same fig then be careful
      # with rows and cols, as there isn't much input checking!!!
      nrows:      2
      ncols:      1
      pdr_v_hops:
        row: 0
        col: 0
        legend: (0.33, 1.05)  # location, None, or Tuple
      energy_v_hops:
        row: 1
        col: 0
        legend: None
