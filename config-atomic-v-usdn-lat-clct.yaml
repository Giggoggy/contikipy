# ----------------------------------------------------------------------------
# ContikiPy
# ----------------------------------------------------------------------------
contiki:
wd:
logtype: cooja
out:     /home/mike/Results/ATOMIC_vs_USDN_LAT_CLCT
csc:
target:

# ----------------------------------------------------------------------------
# Results Options
# packet regex ... https://regex101.com/r/26KZoD/15/
# ----------------------------------------------------------------------------
logtypes:
  cooja: '^\s*(?P<time>\d+):\s+(?P<id>\d+):'

formatters:
  patterns:
    # atomic
    - type:  atomic-energy
      regex: \s+(?P<level>[\w,-]+):\s+(?P<module>\w+)\s*ep:(?P<epoch>\d+)\s+(?P<type>\w+)(?:\s*h:(?P<hops>\d+)|\s+np:(?P<n_phases>\d+)|\s+gon:(?P<gon>\d+)|\s+ron:(?P<ron>\d+)|\s+con:(?P<con>\d+)\s+\(r (?P<all_rdc>\d+\W{1,2}\d+)| \/ (?P<rdc>\d+\W{1,2}\d+))+.*?$
    - type:  atomic-op
      regex: \s+(?P<level>[\w,-]+):\s+(?P<module>\w+)\s*ep:(?P<epoch>\d+)\s+(?P<type>\w+)(?:\s*h:(?P<hops>\d+)|\scp:\s*(?P<c_phase>\d+)|\s+tp:\s*(?P<n_phases>\d+)|\s+dur:\s*(?P<lat>\d+)|\s+tdur:\s*(?P<op_duration>\d+)|\s+an:(?P<active>\d+))+.*?$
    # uSDN
    - type:   pow
      regex:  \s*\[(?P<level>STAT):\s*(?P<module>[\w,-]+)\s*](?:\s*PW\s+\(r (?P<all_rdc>\d+\W{1,2}\d+)| \/ (?P<rdc>\d+\W{1,2}\d+))+.*?$
    - type:   app
      regex:  \s*\[(?P<level>STAT):\s*(?P<module>[\w,-]+)\s*]\s*(?P<status>(TX|RX))\s+(?P<type>\S+)(?:\s+s:(?P<src>\d+)|\s+d:(?P<dest>\d+)|\s+a:(?P<app>\d+)|\s+id:(?P<seq>\d+)|\s+h:(?P<hops>[1-5])|\s+m:(?P<mac>\d+))+.*?$
    - type:   node
      regex:  \s*\[(?P<level>STAT):\s*(?P<module>[\w,-]+)\s*]\s*h:(?P<hops>\d+), n:(?P<degree>\d+)
    - type:   sdn
      regex:  \s*\[(?P<level>STAT):\s*(?P<module>[\w,-]+)\s*]\s*(?P<status>(OUT|BUF|IN))\s+(?P<type>\S+)(?:\s+s:(?P<src>\d+)|\s+d:(?P<dest>\d+)|\s+a:(?P<app>\d+)|\s+id:(?P<seq>\d+)|\s+h:(?P<hops>[1-5])|\s+m:(?P<mac>\d+))+.*?$
    - type:   icmp
      regex:  \s*\[(?P<level>STAT):\s*(?P<module>[\w,-]+)\s*]\s*(?:\s+type:(?P<type>\d+)|\s+code:(?P<code>\d+))+.*?$
    - type:   join
      regex:  \s*\[(?P<level>STAT):\s*(?P<module>[\w,-]+)\s*]\s*(?:\s+n:(?P<node>\d+)|\s+c:(?P<controller>\d+)|\s+dag:(?P<dag>\d+)|\s+dao:(?P<dao>\d+))+.*?$
  process:
    # atomic
    atomic-op:
      - filter:
          col:      active
          min:      1
          max:      1
      - filter:
          col:      hops
          min:      1
          max:      5
    atomic-energy:
      - filter:
          col:      hops
          min:      1
          max:      5
    # uSDN
    sdn:
      - merge:
          df:       node
          left_on:  src
          right_on: id
      - filter:
          col:      hops
          min:      1
          max:      5
    pow:
      - merge:
          df:       node
          left_on:  id
          right_on: id
      - filter:
          col:      hops
          min:      1
          max:      5

# ----------------------------------------------------------------------------
# Multiflow
# ----------------------------------------------------------------------------
multiflow:
  - id:               1_flow
    NUM_APPS:         1
    flows:
      FLOWIDS:        1
      TXNODES:        0
      RXNODES:        1
      DELAY:          120
      BRMIN:          60
      BRMAX:          75


# ----------------------------------------------------------------------------
# Simulations
# ----------------------------------------------------------------------------
simulations:
  # 30 Node Atomic
  - desc:           Atomic-SDN
    type:           atomic
    contiki:        /home/mike/Repos/atomic
    wd:             /home/mike/Repos/atomic/examples/atomic
    csc:            atomic-30-node.csc
    log:            /home/mike/Results/ATOMIC_vs_USDN_LAT_CLCT/Atomic-SDN/Atomic-SDN.log
    makeargs:
      ATM_CONF_MAX_NODES:         30
      ATM_CONF_MAX_EMPTY_STOP:    1
      ATM_CONF_COLLECT_ALL_NODES: 0
      ATM_CONF_REACT_ALL_NODES:   0
      ATM_CONF_OP_FREQ:           0
      ATM_CONF_COLLECT_FREQ:      60
      ATM_CONF_REACT_FREQ:        0
      ATM_CONF_CONFIGURE_FREQ:    0
    regex:
      - 'atomic-energy'
      - 'atomic-op'
    plot:
      latency_v_hops:
        df:      atomic-op
        packets: ['CLCT']
        file:    'latency_v_hops'
      pdr_v_hops:
        df:      atomic-op
        packets: ['CLCT']
        file:    'pdr_v_hops'
      energy_v_hops:
        df:      atomic-energy
        packets: ['CLCT']
        file:    'energy_v_hops'
  # 30 Node uSDN CSMA
  - desc:           uSDN-CSMA
    type:           usdn
    contiki:        /home/mike/Repos/usdn
    wd:             /home/mike/Repos/usdn/examples/sdn
    csc:            usdn-30-node.csc
    log:            /home/mike/Results/ATOMIC_vs_USDN_LAT_CLCT/uSDN-CSMA/uSDN-CSMA.log
    makeargs:
      MAC:          CSMA
      SDN:          1
      FTREFRESH:    0
      FTSRETRY:     0
      FORCENSU:     1
      FTLIFETIME:   300
      NSUFREQ:      60  # NSU frequency actually helps over 0 frequency
      MULTIFLOW:    1
    multiflow:      1_flow
    regex:
      - 'node'
      - 'sdn'
      - 'pow'
    plot:
      latency_v_hops:
        df:      sdn
        packets: ['NSU']
        file:    'latency_v_hops'
      pdr_v_hops:
        df:      sdn
        packets: ['NSU']
        file:    'pdr_v_hops'
      energy_v_hops:
        df:      pow
        packets: ['NSU']
        file:    'energy_v_hops'
  # # 30 Node uSDN CONTIKIMAC
  - desc:           uSDN-CONTIKIMAC
    type:           usdn
    contiki:        /home/mike/Repos/usdn
    wd:             /home/mike/Repos/usdn/examples/sdn
    csc:            usdn-30-node.csc
    log:            /home/mike/Results/ATOMIC_vs_USDN_LAT_CLCT/uSDN-CONTIKIMAC/uSDN-CONTIKIMAC.log
    makeargs:
      MAC:          CONTIKIMAC
      SDN:          1
      FTREFRESH:    0
      FTSRETRY:     0
      FORCENSU:     1
      FTLIFETIME:   300
      NSUFREQ:      60  # NSU frequency actually helps over 0 frequency
      MULTIFLOW:    1
    multiflow:      1_flow
    regex:
      - 'node'
      - 'sdn'
      - 'pow'
    plot:
      latency_v_hops:
        df:      sdn
        packets: ['NSU']
        file:    'latency_v_hops'
      pdr_v_hops:
        df:      sdn
        packets: ['NSU']
        file:    'pdr_v_hops'
      energy_v_hops:
        df:      pow
        packets: ['NSU']
        file:    'energy_v_hops'

# ----------------------------------------------------------------------------
# compare (comparison) config
# ----------------------------------------------------------------------------
compare:
  - sims:
    # which sims do we want to compare?
    - Atomic-SDN
    - uSDN-CSMA
    - uSDN-CONTIKIMAC
    # which plots do we want to compare?
    plots:
      - latency_v_hops
      - pdr_v_hops
      - energy_v_hops
    # plot arguments
    args:
      samefigure: 0
      # N.B. If you are going to put these on the same fig then be careful
      # with rows and cols, as there isn't much input checking!!!
      nrows:      2
      ncols:      1
      pdr_v_hops:
        row: 0
        col: 0
        legend: (0.33, 1.05)  # location, None, or Tuple
      energy_v_hops:
        row: 1
        col: 0
        legend: None
